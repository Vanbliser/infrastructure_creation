version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.1

jobs:
  test_aws_cli_config:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - run:
          name: display aws version
          command: aws --version
      - run:
          name: list iam users
          command: aws iam list-users
      - run:
          name: list ec2 instances
          command: aws ec2 describe-instances

  create_infrastructure:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - checkout
      - run:
          name: create infrasturcture
          command: |
            aws cloudformation create-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} --template-body file://template.yml --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" --region=us-east-1
      
  populate inventory:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - checkout
      - run:
          name: populate ip address
          command: |
            echo "[host]" > inventory
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:Project,Values=udacity" --output text >> inventory
            cat inventory
      - persist_to_workspace:
          root: .
          paths:
            - inventory
  
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["96:4a:db:8e:55:54:05:76:4f:5c:26:0a:de:d9:7d:0e"]
      - run:
          name: install ansible
          command: apk add --update ansible
      - attach_workspace:
          at: .
      - run:
          name: display inventory content
          command: cat inventory
      - run:
          name: Run playbook and configure server
          command: ansible-playbook playbook.yml -i inventory

workflows:
  infratructure_creation:
    jobs:
      - test_aws_cli_config
      - create_infrastructure:
          requires:
            - test_aws_cli_config
      - populate inventory:
          requires:
            - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
